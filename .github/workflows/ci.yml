name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        elixir: ['1.14', '1.15', '1.16']
        otp: ['25', '26']
        exclude:
          # OTP 26 requires Elixir 1.15+
          - elixir: '1.14'
            otp: '26'
    
    env:
      MIX_ENV: test
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Elixir
      uses: erlef/setup-beam@v1
      with:
        elixir-version: ${{ matrix.elixir }}
        otp-version: ${{ matrix.otp }}
        
    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: |
          deps
          _build
        key: ${{ runner.os }}-mix-${{ matrix.elixir }}-${{ matrix.otp }}-${{ hashFiles('**/mix.lock') }}
        restore-keys: |
          ${{ runner.os }}-mix-${{ matrix.elixir }}-${{ matrix.otp }}-
          ${{ runner.os }}-mix-${{ matrix.elixir }}-
          ${{ runner.os }}-mix-
          
    - name: Install dependencies
      run: mix deps.get
      
    - name: Compile with warnings as errors
      run: mix compile --warnings-as-errors
      
    - name: Check formatting
      run: mix format --check-formatted
      
    - name: Run tests
      run: mix test

  lint:
    name: Lint
    runs-on: ubuntu-latest
    
    env:
      MIX_ENV: dev
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Elixir
      uses: erlef/setup-beam@v1
      with:
        elixir-version: '1.16'
        otp-version: '26'
        
    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: |
          deps
          _build
        key: ${{ runner.os }}-mix-lint-${{ hashFiles('**/mix.lock') }}
        restore-keys: |
          ${{ runner.os }}-mix-lint-
          ${{ runner.os }}-mix-
          
    - name: Install dependencies
      run: mix deps.get
      
    - name: Compile
      run: mix compile
      
    - name: Check formatting
      run: mix format --check-formatted